{"version":3,"sources":["services/contracts/upgradeStar.js","actions/hero.js","components/Popup/Loading.js","components/Popup/UpgradeStar.js","actions/market.js","assets/image/water-icon.png","assets/image/fire-icon.png","assets/image/dark-icon.png","assets/image/light-icon.png","assets/image/wind-icon.png","assets/image/attack-item.png","assets/image/defense-item.png","assets/image/speed-item.png","assets/image/HP-item.png","utilities/http.js"],"names":["getUpgradeStarContract","getContractAsync","chainId","a","getUpgradeStarABI","UPGRADE_START_ABI","contractAddress","getUpgradeStarAddress","contract","getKabyTokenContract","getKabyTokenABI","KABY_TOKEN_ABI","kaby","getKabyTokenAddress","tokenContract","upgradeStarForHero","heroId","getInfoWallet","web3","account","upgradeStarContract","data","methods","encodeABI","config","from","toString","to","options","address","value","eth","sendTransaction","result","returnSuccess","returnError","message","getAmountUpStar","currentStart","index","Number","payAmountForUpStar","call","amount","upgrade","allowance","approveUpgrade","approve","upgradeStar","http","post","LoadingPopup","showModal","ctx","useContext","ModalContext","useEffect","setIsModalOpen","Modal","centered","show","backdrop","keyboard","className","Header","Title","Body","Row","Col","Spinner","as","animation","size","role","variant","UpgradeStarPopup","handleCloseModal","heroStar","handleStarUpgrade","useWeb3React","useState","transaction","setTransaction","upStarPrice","setUpStarPrice","upgradeDetail","setUpgradeDetail","setAllowance","getBalance","getTokenBalance","balance","setBalanceKaby","kabyBalance","networkId","networkIdAPI","body","heroAPI","res","status","console","log","toast","error","NOTIFY","ERROR","default","requestUpgrade","getAllowance","then","balanceKaby","couldUpgrade","TRANSACTION","UPGRADE","success","SUCCESS","APPROVE","Loading","onHide","closeButton","Form","Text","id","Button","onClick","type","includes","fetchItemList","params","dispatch","getState","get","fetchItemListWallet","fetchHeroListUser","fetchHeroListTraining","fetchHeroTrainingExp","fetchHeroDetail","fetchHeroOfferList","fetchHeroTransferList","fetchItemDetail","fetchItemDetailWallet","buyItemOffChain","listItemMarket","deListItemMarket","instance","axios","create","baseURL","process","headers","Authorization","localStorage","getItem","undefined","paramsSerializer","queryString","stringify","interceptors","request","use","token","Promise","reject","response","err"],"mappings":"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","file":"static/js/HPwBJc.a7754c.2.chunk.js","sourcesContent":["import {\n  getUpgradeStarABI,\n  getKabyTokenABI,\n  getUpgradeStarAddress,\n  getKabyTokenAddress,\n} from 'constant/contract'\nimport { getInfoWallet } from './wallet'\nimport { returnError, returnSuccess } from 'services/utils/returnFormat'\n\nasync function getUpgradeStarContract(getContractAsync, chainId) {\n  const { UPGRADE_START_ABI } = getUpgradeStarABI(chainId)\n  const contractAddress = getUpgradeStarAddress(chainId)\n  if (!contractAddress) {\n    return null\n  }\n  const { contract } = await getContractAsync(contractAddress, UPGRADE_START_ABI)\n  return contract\n}\n\nasync function getKabyTokenContract(getContractAsync, chainId) {\n  const { KABY_TOKEN_ABI } = getKabyTokenABI(chainId)\n  const kaby = getKabyTokenAddress(chainId)\n  const { contract: tokenContract } = await getContractAsync(kaby, KABY_TOKEN_ABI)\n  return tokenContract\n}\n\nexport async function upgradeStarForHero(heroId) {\n  try {\n    const { web3, account, chainId, getContractAsync } = await getInfoWallet()\n    const upgradeStarContract = await getUpgradeStarContract(getContractAsync, chainId)\n    const data = upgradeStarContract?.methods.upgradeStarForHero(heroId).encodeABI()\n    const config = {\n      from: account?.toString(),\n      to: upgradeStarContract?.options.address,\n      data,\n      value: '0x00',\n    }\n    const result = await web3.eth.sendTransaction(config)\n\n    return returnSuccess(result)\n  } catch (error) {\n    return returnError(error.message)\n  }\n}\n\nexport async function getHeroLevel(heroId) {\n  const { chainId, getContractAsync } = await getInfoWallet()\n  const contract = await getUpgradeStarContract(getContractAsync, chainId)\n  const level = await contract?.methods.heroLevel(heroId).call()\n  return Number(level)\n}\n\nexport async function getAmountUpStar(currentStart) {\n  const { chainId, getContractAsync } = await getInfoWallet()\n  const contract = await getUpgradeStarContract(getContractAsync, chainId)\n  const index = Number(currentStart) - 1\n  const amount = await contract?.methods.payAmountForUpStar(index).call()\n  return Number(amount)\n}\n\nexport async function getAllowance() {\n  const { account, chainId, getContractAsync } = await getInfoWallet()\n  const tokenContract = await getKabyTokenContract(getContractAsync, chainId)\n  const upgrade = getUpgradeStarAddress(chainId)\n  const allowance = await tokenContract?.methods.allowance(account, upgrade).call()\n  return Number(allowance)\n}\n\nexport async function approveUpgrade() {\n  try {\n    const amount = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n    const { web3, account, chainId, getContractAsync } = await getInfoWallet()\n    const tokenContract = await getKabyTokenContract(getContractAsync, chainId)\n    const upgrade = getUpgradeStarAddress(chainId)\n\n    const data = await tokenContract?.methods.approve(upgrade, amount).encodeABI()\n\n    const config = {\n      from: account?.toString(),\n      to: tokenContract?.options.address,\n      data,\n      value: '0x00',\n    }\n    const result = await web3.eth.sendTransaction(config)\n    return returnSuccess(result)\n  } catch (error) {\n    return returnError(error.message)\n  }\n}\n","import http from 'utilities/http'\nexport const upgradeStar = async (data) => {\n  try {\n    const result = await http.post('upgrade-star', data)\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n","import React, { useContext, useEffect } from 'react'\nimport { Modal, Row, Col, Spinner } from 'react-bootstrap'\nimport './popup.scss'\nimport ModalContext from 'containers/layout/NewAppLayout'\nconst LoadingPopup = ({ showModal }) => {\n  const ctx = useContext(ModalContext)\n  useEffect(() => {\n    ctx.setIsModalOpen(showModal)\n  }, [showModal])\n  return (\n    <Modal\n      centered\n      show={showModal}\n      backdrop=\"static\"\n      keyboard={false}\n      className=\"modal-chose-wallet\"\n    >\n      <div className=\"custom-popup\">\n        <Modal.Header>\n          <Modal.Title> </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col className=\"d-flex justify-content-center\">\n              <div>\n                <Spinner\n                  as=\"div\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  variant=\"light\"\n                  className=\"spinner-loading\"\n                />\n              </div>\n              <div>Loading...</div>\n            </Col>\n          </Row>\n        </Modal.Body>\n      </div>\n    </Modal>\n  )\n}\n\nexport default LoadingPopup\n","import { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState, useContext } from 'react'\nimport { Modal, Form, Button, Row, Col, Spinner } from 'react-bootstrap'\n// import * as heroService from \"services/heroes\";\nimport { getInfoWallet } from 'services/contracts/wallet'\nimport './popup.scss'\nimport { TRANSACTION } from 'constant/transactions'\nimport { toast } from 'react-toastify'\nimport { NOTIFY } from 'constant'\nimport {\n  getAmountUpStar,\n  upgradeStarForHero,\n  getAllowance,\n  approveUpgrade,\n} from 'services/contracts/upgradeStar'\nimport * as heroAPI from 'actions/hero'\nimport { networkIdAPI } from 'constant/contract'\nimport LoadingPopup from './Loading'\nimport ModalContext from 'containers/layout/NewAppLayout'\nconst UpgradeStarPopup = ({ showModal, handleCloseModal, heroId, heroStar, handleStarUpgrade }) => {\n  const { chainId, account } = useWeb3React()\n  const [transaction, setTransaction] = useState(null)\n  const [upStarPrice, setUpStarPrice] = useState(0)\n  const [upgradeDetail, setUpgradeDetail] = useState(null)\n  const [allowance, setAllowance] = useState(0)\n  const ctx = useContext(ModalContext)\n  useEffect(() => {\n    ctx.setIsModalOpen(showModal)\n  }, [showModal])\n  useEffect(() => {\n    if (!heroStar || !heroId) return\n    const getBalance = async () => {\n      const { getTokenBalance } = await getInfoWallet()\n      const balance = await getTokenBalance(account)\n\n      setBalanceKaby(Number(balance.kabyBalance) || 0)\n      const amount = await getAmountUpStar(heroStar)\n\n      if (amount) setUpStarPrice(amount)\n    }\n    const requestUpgrade = async () => {\n      const networkId = networkIdAPI[chainId]\n      const body = {\n        networkId,\n        heroId,\n      }\n      const res = await heroAPI.upgradeStar(body)\n      if (res.status === 'success') {\n        console.log(res.data)\n        setUpgradeDetail(res.data)\n      } else {\n        setUpgradeDetail({})\n        toast.error(NOTIFY.ERROR.default)\n      }\n    }\n    requestUpgrade()\n    getBalance()\n    getAllowance().then((allowance) => {\n      setAllowance(allowance)\n    })\n  }, [account, chainId, heroStar, heroId])\n\n  const upgradeStar = async () => {\n    if (upStarPrice > balanceKaby) {\n      return\n    }\n    if (!upgradeDetail?.couldUpgrade) {\n      return\n    }\n    setTransaction(TRANSACTION.UPGRADE)\n    const result = await upgradeStarForHero(heroId)\n    if (result.success) {\n      toast.success(NOTIFY.SUCCESS.default)\n      handleStarUpgrade()\n      handleCloseModal()\n    } else {\n      toast.error(NOTIFY.ERROR.default)\n      setTransaction(null)\n    }\n  }\n\n  const approve = async () => {\n    setTransaction(TRANSACTION.APPROVE)\n    const result = await approveUpgrade()\n    if (result.success) {\n      toast.success(NOTIFY.SUCCESS.default)\n      setAllowance(1e23)\n    } else {\n      toast.error(NOTIFY.ERROR.default)\n    }\n    setTransaction(null)\n  }\n\n  const [balanceKaby, setBalanceKaby] = useState(0)\n\n  useEffect(() => {\n    if (!account || !chainId) return\n\n    const getBalance = async (address) => {\n      const { getTokenBalance } = await getInfoWallet()\n      const balance = await getTokenBalance(address)\n      setBalanceKaby(balance.kabyBalance)\n    }\n    getBalance(account)\n  }, [chainId, account])\n\n  return (\n    <>\n      {!upgradeDetail && <LoadingPopup showModal={true} />}\n      {upgradeDetail && (\n        <Modal centered show={showModal} onHide={handleCloseModal} className=\"modal-chose-wallet\">\n          <div className=\"custom-popup\">\n            <Modal.Header closeButton>\n              <Modal.Title> </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Row>\n                <Col className=\"d-flex flex-column justify-content-between\">\n                  <div>\n                    <h4 className=\"upper-case\">Upgrade Star</h4>\n                    <Form>\n                      <div>\n                        <Form.Text id=\"text-upgrade-star-001\">\n                          Would you like to pay <strong> {upStarPrice} KABY </strong> to upgrade\n                          star of your hero?\n                          <br />\n                          After upgrading to the next star, heroes will increase base stats and\n                          unlock new skill levels. Later, you must use skill books to level up the\n                          skill.\n                        </Form.Text>\n                      </div>\n                    </Form>\n                  </div>\n                  <div className=\"divider-end\">\n                    {upStarPrice > balanceKaby && (\n                      <div className=\"error\">\n                        <span>*Not enough balance KABY</span>\n                      </div>\n                    )}\n                    {!upgradeDetail.couldUpgrade && (\n                      <div className=\"error\">\n                        <span>*Hero hasn't reached max level yet</span>\n                      </div>\n                    )}\n                    <div className=\"d-lg-flex justify-content-end stake-end \">\n                      <Button\n                        className=\"\"\n                        onClick={() => {\n                          handleCloseModal()\n                        }}\n                        variant=\"danger\"\n                        type=\"button\"\n                      >\n                        CANCEL\n                      </Button>\n                      {\n                        <Button\n                          className={\n                            (!upgradeDetail?.couldUpgrade || !upStarPrice || transaction) &&\n                            'disable'\n                          }\n                          onClick={() => {\n                            if (allowance / 1e18 < upStarPrice) {\n                              approve()\n                            } else if (upStarPrice <= balanceKaby && !transaction) upgradeStar()\n                          }}\n                          variant=\"info\"\n                          type=\"button\"\n                        >\n                          {[TRANSACTION.UPGRADE, TRANSACTION.APPROVE].includes(transaction) ? (\n                            <>\n                              {' '}\n                              <Spinner\n                                as=\"div\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                                className=\"spinner-loading\"\n                              />\n                              PENDING...\n                            </>\n                          ) : (\n                            <span>{allowance / 1e18 >= upStarPrice ? 'UPGRADE' : 'APPROVE'}</span>\n                          )}\n                        </Button>\n                      }\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Modal.Body>\n          </div>\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default UpgradeStarPopup\n","import http from 'utilities/http'\nexport const fetchItemList = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('item-list-market', { params })\n\n    return result\n  } catch (err) {\n    throw err\n  }\n}\nexport const fetchItemListWallet = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('item-list-wallet', { params })\n\n    return result\n  } catch (err) {\n    throw err\n  }\n}\nexport const fetchHeroListUser = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('user_hero_list', { params })\n\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const fetchHeroList = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('herolist', { params })\n\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const fetchHeroListTraining = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('stake-hero-list', { params })\n\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const fetchHeroTrainingExp = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('training-exp', { params })\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const fetchHeroDetail = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('herodetail', { params })\n\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const fetchHeroOfferList = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('hero/list-offer', { params })\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const fetchHeroTransferList = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('hero/list-sale', { params })\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const fetchItemDetail = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('item-market', { params })\n    return result\n  } catch (err) {\n    throw err\n  }\n}\nexport const fetchItemDetailWallet = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('item-wallet', { params })\n    return result\n  } catch (err) {\n    throw err\n  }\n}\nexport const buyItemOffChain = (data) => async (dispatch, getState) => {\n  try {\n    const result = await http.post('buy-item', data)\n    return result\n  } catch (err) {\n    throw err\n  }\n}\nexport const listItemMarket = (data) => async (dispatch, getState) => {\n  try {\n    const result = await http.post('transfer-to-market', data)\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const deListItemMarket = (data) => async (dispatch, getState) => {\n  try {\n    const result = await http.post('transfer-to-wallet', data)\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const getBalance = (params) => async (dispatch, getState) => {\n  try {\n    const result = await http.get('user', { params })\n    return result\n  } catch (err) {\n    throw err\n  }\n}\n","export default __webpack_public_path__ + \"static/media/D0xx39.8323c9.water-icon.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.55a19e.fire-icon.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.da6192.dark-icon.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.1c8682.light-icon.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.d50a26.wind-icon.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.89034e.attack-item.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.90e411.defense-item.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.2ae884.speed-item.png\";","export default __webpack_public_path__ + \"static/media/D0xx39.dab76c.HP-item.png\";","import axios from 'axios'\nimport queryString from 'query-string'\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    Authorization: localStorage.getItem('token')\n      ? `Bearer ${localStorage.getItem('token')}`\n      : undefined,\n    'content-type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n  },\n  paramsSerializer: (params) => queryString.stringify(params),\n})\n\ninstance.interceptors.request.use(\n  async (config) => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      config.headers = {\n        Authorization: `Bearer ${token}`,\n      }\n    }\n    return config\n  },\n  (error) => Promise.reject(error)\n)\n\ninstance.interceptors.response.use(\n  (response) => {\n    // Return JSON data\n    if (response.data) {\n      return response.data\n    }\n    return response\n  },\n  (error) => {\n    // if (error?.response?.errId) {\n    //   toast.error(errorMes[error?.response?.errId]);\n    // }\n    // Attempt to get the actual error returned from API\n    const err = (error.response && error.response.data && error.response.data) || error\n\n    return Promise.reject(err) // Propagate rejection back to caller\n  }\n)\n\nexport default instance\n"],"sourceRoot":""}